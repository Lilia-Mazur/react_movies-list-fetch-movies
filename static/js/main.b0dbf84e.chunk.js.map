{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","onAdd","useState","query","setQuery","error","setError","visibleMovie","setVisibleMovie","findMovie","event","title","preventDefault","fetch","then","response","json","Error","onSubmit","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","onClick","App","setMovies","some","item","prev","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAa,UAAQ,aAApC,SAEE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,cAAlC,SAAiDD,EAAMK,aAI3D,sBAAKJ,UAAU,UAAU,UAAQ,UAAjC,UACGD,EAAMM,KACP,iCC5BGC,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,wBCFd,IAAMC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwCJ,mBAAuB,MAA/D,mBAAOK,EAAP,KAAqBC,EAArB,KAWMC,EAAY,SAACC,GCvBd,IAAkBC,EDwBrBD,EAAME,kBCxBeD,EDyBZR,ECxBJU,MAAM,GAAD,OAHE,0DAGF,OAAcF,IACvBG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WDwBxBF,MAAK,SAACC,GACDA,EAASE,OACXT,EAAgB,MAChBF,EAASS,EAASE,SAElBT,EAAgBO,GAChBT,EAAS,SAKjB,OACE,qCACE,uBACEhB,UAAU,aACV4B,SAAU,SAACR,GAAD,OAAWD,EAAUC,IAFjC,UAIE,sBAAKpB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ6B,QAAQ,cAAjC,yBAIA,qBAAK7B,UAAU,UAAf,SACE,uBACE8B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZhC,UAAWiC,IACT,QACA,CAAE,YAAalB,IAEjBmB,MAAOrB,EACPsB,SAAU,SAACf,GAAD,OAAWN,EAASM,EAAMgB,OAAOF,YAK9CnB,GACC,mBAAGf,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE8B,KAAK,SACL9B,UAAU,kBACV,UAAQ,OACRqC,UAAWxB,EAJb,4BAUF,qBAAKb,UAAU,UAAf,SACE,wBACE8B,KAAK,SACL9B,UAAU,oBACV,UAAQ,MACRsC,QAzEK,WACXrB,GACFN,EAAMM,GAGRH,EAAS,IACTI,EAAgB,OAoENmB,UAAWpB,EALb,qCAaN,sBAAKjB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCiB,GAAiB,cAAC,EAAD,CAAWlB,MAAOkB,WE/F/BsB,EAAgB,WAC3B,MAA4B3B,mBAAkB,IAA9C,mBAAOL,EAAP,KAAeiC,EAAf,KAQA,OACE,sBAAKxC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWW,MAZC,SAACZ,GACZQ,EAAOkC,MAAK,SAAAC,GAAI,OAAIA,EAAKjC,SAAWV,EAAMU,WAC7C+B,GAAU,SAAAG,GAAI,4BAAQA,GAAR,CAAc5C,gBCNlC6C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b0dbf84e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { FormEvent, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState('');\n  const [visibleMovie, setVisibleMovie] = useState<Movie | null>(null);\n\n  const addMovie = () => {\n    if (visibleMovie) {\n      onAdd(visibleMovie);\n    }\n\n    setQuery('');\n    setVisibleMovie(null);\n  };\n\n  const findMovie = (event: FormEvent) => {\n    event.preventDefault();\n    getMovie(query)\n      .then((response: Movie) => {\n        if (response.Error) {\n          setVisibleMovie(null);\n          setError(response.Error);\n        } else {\n          setVisibleMovie(response);\n          setError('');\n        }\n      });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => findMovie(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                { 'is-danger': error },\n              )}\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n              data-cy=\"find\"\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              data-cy=\"add\"\n              onClick={addMovie}\n              disabled={!visibleMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {visibleMovie && (<MovieCard movie={visibleMovie} />)}\n      </div>\n    </>\n  );\n};\n","const API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=63452f61&t=';\n\nexport function getMovie(title: string) :Promise<Movie> {\n  return fetch(`${API_URL}${title}`)\n    .then(response => response.json());\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovies = (movie: Movie) => {\n    if (!movies.some(item => item.imdbID === movie.imdbID)) {\n      setMovies(prev => [...prev, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}